name: flake_check

on:
  push:
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: "0 * * * *"

jobs:
  flake-checks:
    name: flake_check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v30
        with:
          install_url: https://nixos.org/nix/install
          extra_nix_config: |
            auto-optimise-store = true
            experimental-features = nix-command flakes

      - name: Run flake check and capture logs
        id: flake_check
        run: |
          nix flake check 2>&1 | tee flake_check.log || true
          grep -E "(warning:|error:)" flake_check.log > flake_check_filtered.log || echo "No warnings or errors." > flake_check_filtered.log
          echo "flake_check_log=$(jq -Rs . < flake_check_filtered.log)" >> $GITHUB_ENV

      - name: Run flake install and capture logs
        id: flake_install
        run: |
          nix profile install . 2>&1 | tee flake_install.log || true
          grep -E "(warning:|error:)" flake_install.log > flake_install_filtered.log || echo "No warnings or errors." > flake_install_filtered.log
          echo "flake_install_log=$(jq -Rs . < flake_install_filtered.log)" >> $GITHUB_ENV

      - name: Debug Logs
        run: |
          echo "Flake Check Log:"
          cat flake_check_filtered.log
          echo "Flake Install Log:"
          cat flake_install_filtered.log

          - name: Send Telegram Notification
          if: always()
          env:
            TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
            CHAT_ID: ${{ secrets.CHAT_ID }}
          run: |
            BRANCH_NAME="${{ github.ref_name }}"
            FLAKE_CHECK_LOG=$(cat flake_check_filtered.log)
            FLAKE_INSTALL_LOG=$(cat flake_install_filtered.log)
  
            if [[ "${{ job.status }}" == "success" ]]; then
              MESSAGE="✅ Flake check for Rishabh5321/seanime-flake completed successfully on branch $BRANCH_NAME."
            else
              MESSAGE="❌ Flake check for Rishabh5321/seanime-flake failed on branch $BRANCH_NAME. Check GitHub Actions for details."
            fi
  
            # Truncate logs to fit Telegram's message limit (4096 characters)
            FLAKE_CHECK_LOG_TRUNCATED=$(echo "$FLAKE_CHECK_LOG" | head -c 2000)
            FLAKE_INSTALL_LOG_TRUNCATED=$(echo "$FLAKE_INSTALL_LOG" | head -c 2000)
  
            # Send the message with properly formatted logs
            curl -s -X POST https://api.telegram.org/bot$TELEGRAM_TOKEN/sendMessage \
              -d chat_id=$CHAT_ID \
              -d text="$MESSAGE
  
Flake Check Log:
$FLAKE_CHECK_LOG_TRUNCATED
  
Flake Install Log:
$FLAKE_INSTALL_LOG_TRUNCATED"